# Copyright 2016 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "common.conf"

appName = "self-service-time-to-pay-frontend"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.app.routes`.
# Default to Routes in the root package (and `conf/app.routes`)
application.router = prod.Routes

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = uk.gov.hmrc.selfservicetimetopay.config.FrontendGlobal

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9250 localhost:9032 www.google-analytics.com data:"

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = true
    }
  }

  services {
    time-to-pay-calculator {
      host = localhost
      port = 8886
    }
    auth {
      host = localhost
      port = 8500
      login-callback.base-url = "http://localhost:9063"
      login-callback.path= "/pay-what-you-owe-in-instalments/arrangement/determine-misalignment"
    }
    cachable {
      session-cache {
        domain = keystore
      }
    }
    keystore {
      host = localhost
      port = 8400
      domain = keystore
      sessionKey = ttpSubmission
    }
    direct-debit {
      host = localhost
      port = 9854
    }
    time-to-pay-arrangement {
      host = localhost
      port = 8889
    }
    time-to-pay-eligibility {
      host = localhost
      port = 9856
    }
    taxpayer {
      host = localhost
      port = 9857
    }
    company-auth {
      url = "http://localhost:9025"
      sign-in-path = "/gg/sign-in"
      sign-out-path = "/gg/sign-out"
    }
  }
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = N/A
  host = auto
}

assets {
  version = "2.235.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend {
  host = "http://localhost:9250"
  url = "http://localhost:9250"
}

filter.whitelist {
  enabled = false
  ips = "localhost"
  destination = "GET->https://www.tax.service.gov.uk"
  exclusions = ["GET->/ping/ping"]
}

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

auditing {
  enabled = false
  traceRequests = false
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

Test {
  filter.whitelist {
    enabled = true
    ips = "test.host,localhost"
    destination = "GET->https://www.gov.uk/somewhere"
    exclusions = ["GET->/ping/ping", "GET->/"]
  }
}

Prod {
  auditing {
    enabled = true
  }

  microservice {
    services {
      self-service-time-to-pay {
        host = self-service-time-to-pay.service
        port = 80
      }

      contact-frontend {
        host = contact-frontend.service
        port = 80
      }
    }
  }

}

timeout=10000

cache.expireAfterDays=1


